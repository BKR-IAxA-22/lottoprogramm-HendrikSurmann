<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>